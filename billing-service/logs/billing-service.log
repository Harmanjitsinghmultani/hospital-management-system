2025-05-06 00:02:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:07:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:12:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:17:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:22:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:27:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:32:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:37:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:41:47 [http-nio-8089-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 00:41:47 [http-nio-8089-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 00:41:47 [http-nio-8089-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 207 ms
2025-05-06 00:41:48 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:41:48 [http-nio-8089-exec-1] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:41:49 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PENDING', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}]
2025-05-06 00:41:49 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:41:49 [http-nio-8089-exec-3] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:41:49 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PENDING', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}]
2025-05-06 00:42:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:44:02 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:44:02 [http-nio-8089-exec-4] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:44:02 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PENDING', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}]
2025-05-06 00:44:02 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:44:02 [http-nio-8089-exec-6] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:44:02 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PENDING', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}]
2025-05-06 00:44:11 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.updateBillStatus() with arguments: 3
2025-05-06 00:44:11 [http-nio-8089-exec-9] DEBUG c.e.b.service.BillingServiceImpl - Updating status for bill ID: 3 to status: PAID
2025-05-06 00:44:11 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.updateBillStatus() with response: Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}
2025-05-06 00:44:11 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:44:11 [http-nio-8089-exec-10] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:44:11 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}]
2025-05-06 00:44:54 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.createBill() with arguments: Bill{id=null, patientId=1, patientName='null', doctorId=3, doctorName='null', amount=789, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}
2025-05-06 00:44:54 [http-nio-8089-exec-5] DEBUG c.e.b.service.BillingServiceImpl - Validating patient and doctor before saving bill: Bill{id=null, patientId=1, patientName='null', doctorId=3, doctorName='null', amount=789, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}
2025-05-06 00:44:54 [http-nio-8089-exec-5] DEBUG c.e.b.service.BillingServiceImpl - Saving validated bill: Bill{id=null, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}
2025-05-06 00:44:54 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.createBill() with response: Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}
2025-05-06 00:44:54 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:44:54 [http-nio-8089-exec-2] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:44:54 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}]
2025-05-06 00:45:34 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:45:34 [http-nio-8089-exec-6] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:45:34 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}]
2025-05-06 00:45:34 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:45:34 [http-nio-8089-exec-7] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:45:34 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}]
2025-05-06 00:46:06 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:46:06 [http-nio-8089-exec-9] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:46:06 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}]
2025-05-06 00:46:06 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:46:06 [http-nio-8089-exec-10] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:46:06 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PENDING', description='pay now '}]
2025-05-06 00:46:14 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.updateBillStatus() with arguments: 9
2025-05-06 00:46:14 [http-nio-8089-exec-1] DEBUG c.e.b.service.BillingServiceImpl - Updating status for bill ID: 9 to status: PAID
2025-05-06 00:46:14 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.updateBillStatus() with response: Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}
2025-05-06 00:46:14 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:46:14 [http-nio-8089-exec-5] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:46:14 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}]
2025-05-06 00:46:24 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:46:24 [http-nio-8089-exec-2] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:46:24 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}]
2025-05-06 00:46:24 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 00:46:24 [http-nio-8089-exec-4] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 00:46:24 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}]
2025-05-06 00:47:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:52:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 00:57:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 01:02:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 01:07:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 01:12:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 01:12:33 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 01:12:33 [http-nio-8089-exec-7] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 01:12:33 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}]
2025-05-06 01:12:33 [http-nio-8089-exec-8] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 01:12:33 [http-nio-8089-exec-8] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 01:12:33 [http-nio-8089-exec-8] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=1, patientName='', doctorId=2, doctorName='', amount=150.00, billingDate=2025-04-22T10:00, status='PENDING', description='Consultation fee'}, Bill{id=2, patientId=1, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=3, patientId=1, patientName='', doctorId=6, doctorName='', amount=2500.75, billingDate=2025-04-28T14:30, status='PAID', description='Consultation and X-Ray services'}, Bill{id=5, patientId=2, patientName='', doctorId=2, doctorName='', amount=2500.75, billingDate=2025-04-29T14:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=7, patientId=2, patientName='kiss1234', doctorId=2, doctorName='dr_smith', amount=2500.75, billingDate=2025-04-29T15:45, status='PENDING', description='Consultation with Dr. Smith'}, Bill{id=8, patientId=2, patientName='harsh1234', doctorId=2, doctorName='drverma', amount=1234.00, billingDate=2025-05-21T15:03, status='PENDING', description='pay now'}, Bill{id=9, patientId=1, patientName='aman123', doctorId=3, doctorName='drram', amount=789.00, billingDate=2025-05-21T00:44, status='PAID', description='pay now '}]
2025-05-06 01:17:26 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 06:35:36 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5h13m40s441ms591µs700ns).
2025-05-06 06:35:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 06:40:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 06:45:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 06:50:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 06:55:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:00:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:05:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:10:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:15:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:20:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:25:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:30:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:35:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:40:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:45:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:47:10 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:10 [http-nio-8089-exec-3] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:10 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:10 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:10 [http-nio-8089-exec-3] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:10 [http-nio-8089-exec-3] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:19 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:19 [http-nio-8089-exec-4] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:19 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:19 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:19 [http-nio-8089-exec-4] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:19 [http-nio-8089-exec-4] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:26 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:26 [http-nio-8089-exec-7] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:26 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:26 [http-nio-8089-exec-8] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:26 [http-nio-8089-exec-8] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:26 [http-nio-8089-exec-8] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:33 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:33 [http-nio-8089-exec-9] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:33 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:47:33 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:47:33 [http-nio-8089-exec-1] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:47:33 [http-nio-8089-exec-1] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:50:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:55:32 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:55:32 [http-nio-8089-exec-2] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:55:32 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:55:32 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:55:32 [http-nio-8089-exec-2] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:55:32 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:55:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 07:55:41 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:55:41 [http-nio-8089-exec-6] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:55:41 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:55:41 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:55:41 [http-nio-8089-exec-7] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:55:42 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:56:53 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:56:53 [http-nio-8089-exec-10] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:56:53 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:56:53 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:56:53 [http-nio-8089-exec-9] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:56:53 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: []
2025-05-06 07:58:31 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.createBill() with arguments: Bill{id=null, patientId=2, patientName='null', doctorId=2, doctorName='null', amount=1500, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}
2025-05-06 07:58:31 [http-nio-8089-exec-5] DEBUG c.e.b.service.BillingServiceImpl - Validating patient and doctor before saving bill: Bill{id=null, patientId=2, patientName='null', doctorId=2, doctorName='null', amount=1500, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}
2025-05-06 07:58:31 [http-nio-8089-exec-5] DEBUG c.e.b.service.BillingServiceImpl - Saving validated bill: Bill{id=null, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}
2025-05-06 07:58:31 [http-nio-8089-exec-5] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.createBill() with response: Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}
2025-05-06 07:58:31 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:58:31 [http-nio-8089-exec-2] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:58:31 [http-nio-8089-exec-2] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500.00, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}]
2025-05-06 07:58:53 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:58:53 [http-nio-8089-exec-6] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:58:53 [http-nio-8089-exec-6] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500.00, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}]
2025-05-06 07:58:53 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:58:53 [http-nio-8089-exec-7] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:58:53 [http-nio-8089-exec-7] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500.00, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}]
2025-05-06 07:59:51 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:59:51 [http-nio-8089-exec-10] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:59:51 [http-nio-8089-exec-10] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500.00, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}]
2025-05-06 07:59:51 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ▶️ [CONTROLLER] Entering: BillingController.getAllBills() with arguments: []
2025-05-06 07:59:51 [http-nio-8089-exec-9] DEBUG c.e.b.service.BillingServiceImpl - Fetching all bills
2025-05-06 07:59:51 [http-nio-8089-exec-9] INFO  c.example.billing.aop.LoggingAspect - ✅ [CONTROLLER] Exiting: BillingController.getAllBills() with response: [Bill{id=1, patientId=2, patientName='user2', doctorId=2, doctorName='drsharma', amount=1500.00, billingDate=2025-05-10T07:57, status='PENDING', description='Doctor fee :- 1000/- 
Blood Test :- 500/- '}]
2025-05-06 08:00:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-06 08:05:37 [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
